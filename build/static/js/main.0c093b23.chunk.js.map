{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/Welcome.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuotes.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","components/comments/Welcome.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","enteredAuthor","setEnteredAuthor","enteredText","setEnteredText","isEntering","setIsEntering","when","onFocus","form","onSubmit","event","preventDefault","onAddQuote","isLoading","loading","control","htmlFor","onChange","target","value","rows","actions","NewQuotes","NewCommentForm","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","loadedComments","params","useParams","addedCommentHandler","console","log","HighlightedQuote","QuoteDetail","match","useRouteMatch","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","Welcome","wrapper","title","paragraph","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c093b23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2zhUa\",\"loading\":\"QuoteForm_loading__3f7F0\",\"control\":\"QuoteForm_control__3EpEu\",\"actions\":\"QuoteForm_actions__Os9YQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__28_vj\",\"logo\":\"MainNavigation_logo__2B3B-\",\"nav\":\"MainNavigation_nav__37Hi4\",\"active\":\"MainNavigation_active__3FQyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Welcome_wrapper__1qpaL\",\"title\":\"Welcome_title__1cthP\",\"paragraph\":\"Welcome_paragraph__1KZlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__37BHa\",\"loading\":\"NewCommentForm_loading__sNilr\",\"control\":\"NewCommentForm_control__oGwmx\",\"actions\":\"NewCommentForm_actions__3lq0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2dCzu\",\"sorting\":\"QuoteList_sorting__1uABH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__uiUx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3JmpK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__TLoSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1ROUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3-9SU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2GKgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__257Fn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3l3CA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3va2S\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const changeSortingHandler = () => {\n    history.push(\"quotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sorting {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://quotes-21e0d-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import React, { useEffect } from \"react\";\r\n\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={loadedQuotes} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [enteredAuthor, setEnteredAuthor] = useState(\"\");\n  const [enteredText, setEnteredText] = useState(\"\");\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorChangeHandler = (event) => {\n    setEnteredAuthor(event.target.value);\n  };\n  const textChangeHandler = (event) => {\n    setEnteredText(event.target.value);\n  };\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    setEnteredText(\"\");\n    setEnteredAuthor(\"\");\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your data will be lost. =/\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input\n              type=\"text\"\n              id=\"author\"\n              onChange={authorChangeHandler}\n              value={enteredAuthor}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea\n              id=\"text\"\n              rows=\"5\"\n              onChange={textChangeHandler}\n              value={enteredText}\n            ></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from \"react\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuotes = () => {\r\n  const history = useHistory();\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuotes;\r\n","import { useState, useEffect } from \"react\";\n\nimport classes from \"./NewCommentForm.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const [enteredText, setEnteredText] = useState(\"\");\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const textChangeHandler = (event) => {\n    setEnteredText(event.target.value);\n  };\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n    setEnteredText(\"\");\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea\n          id=\"comment\"\n          rows=\"5\"\n          value={enteredText}\n          onChange={textChangeHandler}\n        ></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const params = useParams();\n  const { quoteId } = params;\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centerd\">No comments yet.</p>;\n  }\n\n  console.log(comments, status, !loadedComments);\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      <p>Comments...</p>\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  const { quoteId } = params;\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuotes.text) {\r\n    return <p>No quote found</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HighlightedQuote author={loadedQuotes.author} text={loadedQuotes.text} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import React from \"react\";\r\nimport classes from \"./MainNavigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <NavLink to=\"/welcome\" className={classes.logo}>\r\n        Great Quotes\r\n      </NavLink>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\r\n              Add a quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"centered\">\r\n      <p>Page not Found! :(</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Welcome.module.css\";\r\n\r\nconst Welcome = () => {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <h1 className={classes.title}>Welcome, new user!</h1>\r\n      <p className={classes.paragraph}>\r\n        This website is just a demo practice for React router. However, if you\r\n        wish to play arround a bit, I would be extremly happy.\r\n      </p>\r\n      <p className={classes.paragraph}>\r\n        To store the quotes, I'm using Firebase as a backend. That means that\r\n        every quote, or comment will be stored in the app. So be carefull!\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuotes from \"./pages/NewQuotes\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\nimport Welcome from \"./components/comments/Welcome\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/welcome\" />\n        </Route>\n        <Route path=\"/welcome\">\n          <Welcome />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuotes />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}